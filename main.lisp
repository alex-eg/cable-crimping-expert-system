(in-package :main)

;;; Определения структур - моделей участников процесса

(defstruct сисадмин
  выбрал-тип-кабеля
  есть-коннектор?
  есть-кримпер?)

(defstruct кабель
  готов?
  отмерен?
  отрезан?
  зачищен?
  обжат?
  вставлен-в-кримпер?
  тип)

(defstruct коннектор
  тип-кабеля
  установлен-на-кабель?
  надет-на-кабель?
  вставлен-в-кримпер?)

(defstruct патчкорд
  готов?
  тип-соединения
  назначение
  состоит-из-кабеля
  состоит-из-коннектора)

(defstruct кримпер
  зажат?
  повернут-на-360°?)

(defmacro копировать-кабель (кабель &key готов? отмерен? отрезан? зачищен? обжат? тип вставлен-в-кримпер?)
  `(make-кабель :готов? ,(or готов? `(кабель-готов? ,кабель))
		:отмерен? ,(or отмерен? `(кабель-отмерен? ,кабель))
		:отрезан? ,(or отрезан? `(кабель-отрезан? ,кабель))
		:зачищен? ,(or зачищен? `(кабель-зачищен? ,кабель))
		:обжат? ,(or обжат? `(кабель-обжат? ,кабель))
		:вставлен-в-кримпер? ,(or вставлен-в-кримпер? `(кабель-вставлен-в-кримпер? ,кабель))
		:тип ,(or тип `(кабель-тип ,кабель))))

(defmacro копировать-патчкорд (патчкорд &key готов? 
					  подключен-к-тестеру? назначение 
					  тип-соединения
					  состоит-из-коннектора
					  состоит-из-кабеля)

  `(make-патчкорд :готов? ,(or готов? `(патчкорд-готов? ,патчкорд))
		  :подключен-к-тестеру? ,(or подключен-к-тестеру? `(патчкорд-подключен-к-тестеру? ,патчкорд))
		  :назначение ,(or назначение `(патчкорд-назначение ,патчкорд))
		  :тип-соединения ,(or тип-соединения `(патчкорд-тип-соединения ,патчкорд))
		  :состоит-из-кабеля ,(or состоит-из-кабеля `(патчкорд-состоит-из-кабеля ,патчкорд))
		  :состоит-из-коннектора ,(or состоит-из-коннектора `(патчкорд-состоит-из-коннектора ,патчкорд))))

(defmacro копировать-кримпер (кримпер &key зажат? повернут-на-360°?)
  `(make-кримпер :зажат? ,(or зажат? `(кримпер-зажат? ,кримпер))
		 :повернут-на-360°? ,(or повернут-на-360°? `(кримпер-повернут-на-360°? ,кримпер))))

(defmacro копировать-коннектор (коннектор &key тип-кабеля
					    установлен-на-кабель?
					    надет-на-кабель?
					    вставлен-в-кримпер?)
  `(make-коннектор :тип-кабеля ,(or тип-кабеля `(коннектор-тип-кабеля ,коннектор))
		   :установлен-на-кабель? ,(or установлен-на-кабель? `(коннектор-установлен-на-кабель? ,коннектор))
		   :надет-на-кабель? ,(or надет-на-кабель? `(коннектор-надет-на-кабель? ,коннектор))
		   :вставлен-в-кримпер? ,(or вставлен-в-кримпер? `(коннектор-вставлен-в-кримпер? ,коннектор))))

;;; Функции-методы определенных выше структур


;;; Корневая Схема
(defun сделать-патчкорд (кабель коннектор патчкорд)
  (if (and (кабель-готов? кабель)
	   (коннектор-установлен-на-кабель? коннектор))
      (копировать-патчкорд патчкорд :готов? t)))

;;; 1. Сисадмин - подготовить - кабель
(defun подготовить-кабель (сисадмин патчкорд кабель)
  (if (and (сисадмин-выбрал-тип-кабеля сисадмин)
	   (кабель-тип кабель)
	   (кабель-отмерен? кабель)
	   (кабель-отрезан? кабель)
	   (кабель-зачищен? кабель)
	   (патчкорд-тип-соединения патчкорд))
      (копировать-кабель кабель :готов? t)))

;;; 1.1 Выбрать тип - патчкорд (кабель)
(defun выбрать-тип (кабель патчкорд)
  (cond ((eq (патчкорд-назначение патчкорд) :для-обычных-систем)
	 (копировать-кабель кабель :тип :utp))
	((eq (патчкорд-назначение патчкорд) :для-высоконагруженных-систем)
	 (копировать-кабель кабель :тип :stp))))

;;; 1.2
(defun отмерить-кабель (кабель)
  (if (кабель-тип кабель)
      (копировать-кабель кабель :отмерен? t)))

;;; 1.3
(defun отрезать-кабель (кабель)
  (if (кабель-отмерен кабель)
      (копировать-кабель кабель :отрезан? t)))

;;; 1.4
(defun зачистить-кабель (кабель кримпер)
  (if (and (кабель-отрезан? кабель)
	   (кримпер-повернут-на-360°? кримпер)
	   (not (кабель-вставлен-в-кримпер? кабель))
	   (not (кримпер-зажат кримпер)))
      (копировать-кабель кабель :зачищен? t)))

;;; 1.4.1
(defun вставить-кабель (кабель)
  (копировать-кабель кабель :вставлен-в-кримпер? t))

;;; 1.4.2
(defun зажать-кримпер (кримпер кабель)
  (if (кабель-вставлен-в-кримпер? кабель)
      (копировать-кримпер кримпер :зажат? t)))

;;; 1.4.3
(defun повернуть-кримпер (кримпер кабель)
  (if (and (кабель-вставлен-в-кримпер? кабель)
	   (кримпер-зажат? кримпер))
      (копировать-кримпер кримпер :повернут-на-360°? t)))

;;; 1.4.4
(defun разжать-кримпер (кримпер кабель)
  (if (and (кабель-зачищен? кабель)
	   (кабель-вставлен-в-кримпер? кабель)
	   (кримпер-зажат? кримпер))
      (копировать-кримпер кримпер :зажат? nil)))
	 
;;; 1.4.5  
(defun вынуть-кабель (кримпер кабель)
  (if (and (кабель-зачищен? кабель)
	   (not (кримпер-зажат? кримпер)))
      (копировать-кабель кабель :вставлен-в-кримпер? nil)))


;;; 2
(defun установить-коннектор (коннектор кабель)
  (if (and (кабель-готов? кабель)
	   (кабель-обжат? кабель)
	   (коннектор-надет-на-кабель? коннектор))
      (копировать-коннектор коннектор :установлен-на-кабель? t)))

;;; 2.1
(defun надеть-коннектор (коннектор кабель)
  (if (кабель-готов? кабель)
      (копировать-коннектор коннектор :надет-на-кабель? t)))

;;; 2.2
(defun обжать-кабель (коннектор кабель)
  (if (and (коннектор-надет-на-кабель? коннектор)
	   (коннектор-вставлен-в-кримпер? коннектор))
      (копировать-кабель кабель :обжат t)))

;;; 2.2.1
(defun вставить-коннектор (коннектор кримпер)
  (if (and (not (кримпер-зажат? кримпер))
	   (коннектор-надет-на-кабель? коннектор))
      (копировать-коннектор коннектор :вставлен-в-кримпер? t)))

;;; 2.2.2
(defun зажать-кримпер-коннектор (коннектор кримпер)
  (if (and (коннектор-вставлен-в-кримпер? коннектор)
	   (коннектор-надет-на-кабель? коннектор))
      (копировать-кримпер :зажат? t)))

;;; 2.2.3
(defun разжать-кримпер-коннектор (коннектор кримпер кабель)
  (if (and (коннектор-вставлен-в-кримпер? коннектор)
	   (коннектор-надет-на-кабель? коннектор)
	   (кабель-обжат? кабель))
      (копировать-кримпер кримпер :зажат nil)))

;;; 2.2.4
(defun вынуть-коннектор (коннектор кримпер)
  (if (and (коннектор-надет-на-кабель? коннектор)
	   (коннектор-вставлен-в-кримпер? коннектор)
	   (not (кримпер-зажат? кримпер)))
      (копировать-коннектор коннектор :вставлен-в-кримпер? nil)))

